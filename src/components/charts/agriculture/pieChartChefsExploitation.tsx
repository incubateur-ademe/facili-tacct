// @ts-nocheck
'use client';

import { Agriculture } from '@/lib/postgres/models';
import { Round } from '@/lib/utils/reusableFunctions/round';
import { Any } from '@/lib/utils/types';
import { ResponsivePie } from '@nivo/pie';
import { animated } from '@react-spring/web';

const colors: { [key: string]: string } = {
  'Pas de données': '#ECD8FE',
  'Moins de 55 ans': '#C48EF6',
  'Plus de 55 ans': '#6E3F99'
};

const PieChartChefsExploitation = (props: { agriculture: Agriculture[] }) => {
  const { agriculture } = props;
  let noData = 0;
  let moins55Ans = 0;
  let plus55Ans = 0;
  agriculture.forEach((el) => {
    const value = el.part_over_55;
    if (value === null) {
      noData += 1;
    } else if (value < 55) {
      moins55Ans += 1;
    } else {
      plus55Ans += 1;
    }
  });

  const graphData = [
    {
      id: 'Pas de données',
      label: 'Pas de données',
      value: Round((100 * noData) / (noData + moins55Ans + plus55Ans), 1)
    },
    {
      id: 'Moins de 55 ans',
      label: 'Moins de 55 ans',
      value: Round((100 * moins55Ans) / (noData + moins55Ans + plus55Ans), 1)
    },
    {
      id: 'Plus de 55 ans',
      label: 'Plus de 55 ans',
      value: Round((100 * plus55Ans) / (noData + moins55Ans + plus55Ans), 1)
    }
  ];

  const arcLabelsComponent = ({ datum, label, style }: Any) => {
    return (
      <animated.g style={style}>
        <animated.path
          fill="none"
          stroke={datum.color}
          strokeWidth={style.thickness}
          d={style.path}
        />
        <animated.text
          transform={style.textPosition}
          dominantBaseline="central"
          style={{
            fontSize: 12,
            fontWeight: 400
          }}
        >
          <animated.tspan>{label} : </animated.tspan>
          <animated.tspan style={{ fontWeight: 600 }}>
            {datum.value}
            {' %'}
          </animated.tspan>
        </animated.text>
      </animated.g>
    );
  };

  return (
    <div
      style={{ height: '400px', minWidth: '450px', backgroundColor: 'white' }}
    >
      <ResponsivePie
        data={graphData}
        margin={{ top: 60, right: 80, bottom: 60, left: 80 }}
        colors={(graphData) => colors[graphData.id]}
        isInteractive={true}
        padAngle={1}
        cornerRadius={3}
        activeOuterRadiusOffset={8}
        borderWidth={1}
        arcLinkLabelComponent={arcLabelsComponent}
        arcLinkLabel={({ id }) => `${id}`}
        arcLinkLabelsSkipAngle={7}
        sortByValue={false}
        layers={[
          'arcs',
          'arcLinkLabels',
          'legends'
          // CenteredMetric
        ]}
        borderColor={{
          from: 'color',
          modifiers: [['darker', 0.2]]
        }}
        arcLinkLabelsTextColor="#333333"
        arcLinkLabelsThickness={2}
        arcLinkLabelsColor={{ from: 'color' }}
        arcLinkLabelsOffset={10}
        arcLinkLabelsDiagonalLength={16}
        arcLinkLabelsStraightLength={20}
      />
    </div>
  );
};

export default PieChartChefsExploitation;
